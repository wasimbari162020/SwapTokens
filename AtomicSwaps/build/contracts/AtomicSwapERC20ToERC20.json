{
  "contractName": "AtomicSwapERC20ToERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Close",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_closeTrader",
          "type": "address"
        }
      ],
      "name": "Open",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_openValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_openContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_closeValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_closeTrader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_closeContractAddress",
          "type": "address"
        }
      ],
      "name": "open",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "openValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "openContractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "closeValue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "closeTrader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "closeContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Close\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Expire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_closeTrader\",\"type\":\"address\"}],\"name\":\"Open\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"openValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"openContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"closeValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"closeTrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"closeContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_openValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_openContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_closeValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_closeTrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_closeContractAddress\",\"type\":\"address\"}],\"name\":\"open\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AtomicSwapERC20ToERC20.sol\":\"AtomicSwapERC20ToERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/AtomicSwapERC20ToERC20.sol\":{\"keccak256\":\"0x72eb71e069cf609a500f3a3f89b3a349c436e0e0d9f4ff168462aae7106f1124\",\"urls\":[\"bzz-raw://98ee525f1c4c335ba7eecafc511c75fa53c48fedb88ad1b5555b6fbb6e658f32\",\"dweb:/ipfs/QmWZsvPhvY35Lds2wJEVrp91dC98tGcpXhPSQLQVSuvXtN\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0x5ebfbbc073ab16e1f052f70edfbe32627ab6664b39e676778b8c940e7fce83b2\",\"urls\":[\"bzz-raw://820f227baf344e7e2b62f309ba0ad9bd11bffc9e57b1ed8fd92444ebbc05d9b7\",\"dweb:/ipfs/QmemTXKHvT4oi9CLXLqLuEgS2GcMHu9RxJFv8ZDTwrzyJc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7084:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:5",
                "type": ""
              }
            ],
            "src": "7:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:5",
                "type": ""
              }
            ],
            "src": "334:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:5"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:5",
                "type": ""
              }
            ],
            "src": "417:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:5"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:5",
                "type": ""
              }
            ],
            "src": "545:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:5",
                "type": ""
              }
            ],
            "src": "690:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1091:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:5",
                "type": ""
              }
            ],
            "src": "1025:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1190:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1213:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1195:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1183:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1161:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1168:3:5",
                "type": ""
              }
            ],
            "src": "1108:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1302:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1309:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1298:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1287:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1259:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1269:7:5",
                "type": ""
              }
            ],
            "src": "1232:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1409:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1448:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1430:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1419:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1391:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1401:7:5",
                "type": ""
              }
            ],
            "src": "1364:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1548:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1571:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1553:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1553:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1541:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1519:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1526:3:5",
                "type": ""
              }
            ],
            "src": "1466:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1800:454:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1810:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:3:5",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1818:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1810:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1891:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1904:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1915:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1900:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1900:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1847:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1847:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1972:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1985:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1996:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1981:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1981:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1928:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1928:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1928:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2054:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2067:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2078:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2063:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2063:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2010:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2010:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2010:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2136:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2149:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2092:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2092:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "2218:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2231:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2242:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2227:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2227:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2174:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2174:73:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2174:73:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_address__to_t_uint256_t_address_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1740:9:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1752:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1760:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1768:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1776:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1784:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1795:4:5",
                "type": ""
              }
            ],
            "src": "1590:664:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2303:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2360:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2369:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2372:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2362:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2362:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2362:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2326:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2351:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2333:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2333:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2323:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2323:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2316:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2316:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2313:63:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2296:5:5",
                "type": ""
              }
            ],
            "src": "2260:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2440:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2450:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2472:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2459:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2450:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2515:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2488:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2488:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2488:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2418:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2426:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2434:5:5",
                "type": ""
              }
            ],
            "src": "2388:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2576:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2633:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2642:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2645:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2635:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2635:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2635:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2599:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2624:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2606:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2606:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2596:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2596:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2589:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2589:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2586:63:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2569:5:5",
                "type": ""
              }
            ],
            "src": "2533:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2713:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2723:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2745:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2732:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2732:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2723:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2788:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2761:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2761:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2691:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2699:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2707:5:5",
                "type": ""
              }
            ],
            "src": "2661:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2957:906:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3004:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3006:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3006:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3006:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2978:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2987:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2974:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2974:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2999:3:5",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2970:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2970:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2967:120:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3097:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3112:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3126:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3116:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3141:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3176:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3187:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3172:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3172:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3196:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3151:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3151:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3141:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3224:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3239:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3253:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3243:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3269:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3304:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3315:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3300:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3300:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3324:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3279:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3279:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3269:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3352:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3367:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3381:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3371:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3397:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3432:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3443:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3428:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3428:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3452:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3407:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3407:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3397:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3480:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3495:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3509:2:5",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3499:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3525:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3560:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3571:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3556:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3556:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3580:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3535:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3535:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3525:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3608:119:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3623:17:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3637:3:5",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3627:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3654:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3689:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3700:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3685:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3685:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3709:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3664:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3654:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3737:119:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3752:17:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3766:3:5",
                        "type": "",
                        "value": "160"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3756:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3783:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3818:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3829:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3814:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3814:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3838:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3793:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3793:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "3783:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2887:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2898:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2910:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2918:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2926:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2934:6:5",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2942:6:5",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2950:6:5",
                "type": ""
              }
            ],
            "src": "2806:1057:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3897:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3914:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3917:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3907:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3907:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4011:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4014:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4004:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4004:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4004:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4035:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4038:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4028:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4028:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4028:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3869:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4181:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4191:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4203:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4214:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4199:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4199:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4191:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4271:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4284:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4295:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4280:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4280:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4227:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4227:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4227:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4352:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4365:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4376:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4361:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4361:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4308:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4308:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4308:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4145:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4157:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4165:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4176:4:5",
                "type": ""
              }
            ],
            "src": "4055:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4456:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4466:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4481:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4475:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4466:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4524:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4497:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4497:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4497:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4434:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4442:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4450:5:5",
                "type": ""
              }
            ],
            "src": "4393:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4619:274:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4665:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4667:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4667:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4667:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4640:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4649:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4636:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4636:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4661:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4632:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4632:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4629:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4758:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4773:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4787:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4777:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4802:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4848:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4859:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4844:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4844:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4868:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4812:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4812:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4802:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4589:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4600:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4612:6:5",
                "type": ""
              }
            ],
            "src": "4542:351:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5053:288:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5063:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5075:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5086:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5071:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5063:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5143:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5156:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5167:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5152:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5152:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5099:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5099:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5099:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5224:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5237:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5248:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5233:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5233:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5180:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "5306:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5319:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5330:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5315:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5315:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5262:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5262:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5262:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5009:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5021:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5029:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5037:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5048:4:5",
                "type": ""
              }
            ],
            "src": "4899:442:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5389:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5399:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5424:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5417:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5417:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5410:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5410:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5399:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5371:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5381:7:5",
                "type": ""
              }
            ],
            "src": "5347:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5483:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5537:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5546:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5549:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5539:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5539:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5539:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5506:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5528:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5513:14:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5513:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5503:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5496:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5496:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5493:60:5"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5476:5:5",
                "type": ""
              }
            ],
            "src": "5443:116:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5625:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5635:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5650:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5644:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5635:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5690:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5666:23:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5666:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5666:30:5"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5603:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5611:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5619:5:5",
                "type": ""
              }
            ],
            "src": "5565:137:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5782:271:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5828:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5830:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5830:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5830:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5803:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5812:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5799:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5799:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5824:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5795:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5792:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5921:125:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5936:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5950:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5940:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5965:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6008:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6019:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6004:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6004:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6028:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5975:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5975:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5965:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5752:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5763:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5775:6:5",
                "type": ""
              }
            ],
            "src": "5708:345:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6185:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6195:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6207:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6218:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6203:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6195:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6275:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6288:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6299:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6284:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6284:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6231:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6231:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6231:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6356:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6369:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6380:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6365:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6365:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6312:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6312:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6312:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6149:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6161:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6169:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6180:4:5",
                "type": ""
              }
            ],
            "src": "6059:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6462:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6479:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6502:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6484:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6484:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6472:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6472:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6472:37:5"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6450:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6457:3:5",
                "type": ""
              }
            ],
            "src": "6397:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6619:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6629:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6641:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6652:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6637:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6637:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6629:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6709:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6722:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6733:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6718:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6718:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6665:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6665:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6665:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6591:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6603:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6614:4:5",
                "type": ""
              }
            ],
            "src": "6521:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6885:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6897:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6908:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6893:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6893:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6885:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6965:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6978:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6989:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6974:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6974:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6921:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6921:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6921:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7046:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7059:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7070:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7055:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7055:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7002:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7002:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7002:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6839:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6851:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6859:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6870:4:5",
                "type": ""
              }
            ],
            "src": "6749:332:5"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_address_t_address__to_t_uint256_t_address_t_uint256_t_address_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "96:3120:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "96:3120:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2881:333;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1707:751;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;816:887;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2462:415;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2881:333;2934:17;2953:27;2982:18;3002:19;3023:28;3059:16;3078:5;:14;3084:7;3078:14;;;;;;;;;;;3059:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3106:4;:14;;;3122:4;:24;;;3148:4;:15;;;3165:4;:16;;;3183:4;:25;;;3098:111;;;;;;;;;;;2881:333;;;;;;;:::o;1707:751::-;1760:7;788:11;765:34;;;;;;;;:::i;:::-;;:10;:19;776:7;765:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;756:44;;;;;;1798:16:::1;1817:5:::0;:14:::1;1823:7;1817:14;;;;;;;;;;;1798:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1859:13;1837:10;:19;1848:7;1837:19;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1960:24;1993:4;:25;;;1960:59;;2052:18;:28;;;2081:4;:16;;;2107:4;2052:61;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2033:4;:15;;;:80;;2025:89;;;::::0;::::1;;2128:18;:31;;;2160:4;:16;;;2178:4;:15;;;2195:4;:15;;;2128:83;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2120:92;;;::::0;::::1;;2295:23;2327:4;:24;;;2295:57;;2366:17;:26;;;2393:4;:16;;;2411:4;:14;;;2366:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2358:69;;;::::0;::::1;;2439:14;2445:7;2439:14;;;;;;:::i;:::-;;;;;;;;1769:689;;;1707:751:::0;;:::o;816:887::-;995:7;679:14;656:37;;;;;;;;:::i;:::-;;:10;:19;667:7;656:19;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;647:47;;;;;;1074:23:::1;1106:20;1074:53;;1155:17;:27;;;1183:10;1203:4;1155:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1141:10;:68;;1133:77;;;::::0;::::1;;1224:17;:30;;;1255:10;1275:4;1282:10;1224:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1216:78;;;::::0;::::1;;1339:16;1358:235;;;;;;;;1382:10;1358:235;;;;1412:10;1358:235;;;;;;1451:20;1358:235;;;;;;1491:11;1358:235;;;;1523:12;1358:235;;;;;;1565:21;1358:235;;;;::::0;1339:254:::1;;1616:4;1599:5;:14:::0;1605:7:::1;1599:14;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:11;1626:10:::0;:19:::1;1637:7;1626:19;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1671:27;1676:7;1685:12;1671:27;;;;;;;:::i;:::-;;;;;;;;1004:699;;816:887:::0;;;;;;;:::o;2462:415::-;2516:7;788:11;765:34;;;;;;;;:::i;:::-;;:10;:19;776:7;765:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;756:44;;;;;;2555:16:::1;2574:5:::0;:14:::1;2580:7;2574:14;;;;;;;;;;;2555:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2616:14;2594:10;:19;2605:7;2594:19;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2714:23;2746:4;:24;;;2714:57;;2785:17;:26;;;2812:4;:15;;;2829:4;:14;;;2785:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2777:68;;;::::0;::::1;;2857:15;2864:7;2857:15;;;;;;:::i;:::-;;;;;;;;2525:352;;2462:415:::0;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:126::-;1269:7;1309:42;1302:5;1298:54;1287:65;;1232:126;;;:::o;1364:96::-;1401:7;1430:24;1448:5;1430:24;:::i;:::-;1419:35;;1364:96;;;:::o;1466:118::-;1553:24;1571:5;1553:24;:::i;:::-;1548:3;1541:37;1466:118;;:::o;1590:664::-;1795:4;1833:3;1822:9;1818:19;1810:27;;1847:71;1915:1;1904:9;1900:17;1891:6;1847:71;:::i;:::-;1928:72;1996:2;1985:9;1981:18;1972:6;1928:72;:::i;:::-;2010;2078:2;2067:9;2063:18;2054:6;2010:72;:::i;:::-;2092;2160:2;2149:9;2145:18;2136:6;2092:72;:::i;:::-;2174:73;2242:3;2231:9;2227:19;2218:6;2174:73;:::i;:::-;1590:664;;;;;;;;:::o;2260:122::-;2333:24;2351:5;2333:24;:::i;:::-;2326:5;2323:35;2313:63;;2372:1;2369;2362:12;2313:63;2260:122;:::o;2388:139::-;2434:5;2472:6;2459:20;2450:29;;2488:33;2515:5;2488:33;:::i;:::-;2388:139;;;;:::o;2533:122::-;2606:24;2624:5;2606:24;:::i;:::-;2599:5;2596:35;2586:63;;2645:1;2642;2635:12;2586:63;2533:122;:::o;2661:139::-;2707:5;2745:6;2732:20;2723:29;;2761:33;2788:5;2761:33;:::i;:::-;2661:139;;;;:::o;2806:1057::-;2910:6;2918;2926;2934;2942;2950;2999:3;2987:9;2978:7;2974:23;2970:33;2967:120;;;3006:79;;:::i;:::-;2967:120;3126:1;3151:53;3196:7;3187:6;3176:9;3172:22;3151:53;:::i;:::-;3141:63;;3097:117;3253:2;3279:53;3324:7;3315:6;3304:9;3300:22;3279:53;:::i;:::-;3269:63;;3224:118;3381:2;3407:53;3452:7;3443:6;3432:9;3428:22;3407:53;:::i;:::-;3397:63;;3352:118;3509:2;3535:53;3580:7;3571:6;3560:9;3556:22;3535:53;:::i;:::-;3525:63;;3480:118;3637:3;3664:53;3709:7;3700:6;3689:9;3685:22;3664:53;:::i;:::-;3654:63;;3608:119;3766:3;3793:53;3838:7;3829:6;3818:9;3814:22;3793:53;:::i;:::-;3783:63;;3737:119;2806:1057;;;;;;;;:::o;3869:180::-;3917:77;3914:1;3907:88;4014:4;4011:1;4004:15;4038:4;4035:1;4028:15;4055:332;4176:4;4214:2;4203:9;4199:18;4191:26;;4227:71;4295:1;4284:9;4280:17;4271:6;4227:71;:::i;:::-;4308:72;4376:2;4365:9;4361:18;4352:6;4308:72;:::i;:::-;4055:332;;;;;:::o;4393:143::-;4450:5;4481:6;4475:13;4466:22;;4497:33;4524:5;4497:33;:::i;:::-;4393:143;;;;:::o;4542:351::-;4612:6;4661:2;4649:9;4640:7;4636:23;4632:32;4629:119;;;4667:79;;:::i;:::-;4629:119;4787:1;4812:64;4868:7;4859:6;4848:9;4844:22;4812:64;:::i;:::-;4802:74;;4758:128;4542:351;;;;:::o;4899:442::-;5048:4;5086:2;5075:9;5071:18;5063:26;;5099:71;5167:1;5156:9;5152:17;5143:6;5099:71;:::i;:::-;5180:72;5248:2;5237:9;5233:18;5224:6;5180:72;:::i;:::-;5262;5330:2;5319:9;5315:18;5306:6;5262:72;:::i;:::-;4899:442;;;;;;:::o;5347:90::-;5381:7;5424:5;5417:13;5410:21;5399:32;;5347:90;;;:::o;5443:116::-;5513:21;5528:5;5513:21;:::i;:::-;5506:5;5503:32;5493:60;;5549:1;5546;5539:12;5493:60;5443:116;:::o;5565:137::-;5619:5;5650:6;5644:13;5635:22;;5666:30;5690:5;5666:30;:::i;:::-;5565:137;;;;:::o;5708:345::-;5775:6;5824:2;5812:9;5803:7;5799:23;5795:32;5792:119;;;5830:79;;:::i;:::-;5792:119;5950:1;5975:61;6028:7;6019:6;6008:9;6004:22;5975:61;:::i;:::-;5965:71;;5921:125;5708:345;;;;:::o;6059:332::-;6180:4;6218:2;6207:9;6203:18;6195:26;;6231:71;6299:1;6288:9;6284:17;6275:6;6231:71;:::i;:::-;6312:72;6380:2;6369:9;6365:18;6356:6;6312:72;:::i;:::-;6059:332;;;;;:::o;6397:118::-;6484:24;6502:5;6484:24;:::i;:::-;6479:3;6472:37;6397:118;;:::o;6521:222::-;6614:4;6652:2;6641:9;6637:18;6629:26;;6665:71;6733:1;6722:9;6718:17;6709:6;6665:71;:::i;:::-;6521:222;;;;:::o;6749:332::-;6870:4;6908:2;6897:9;6893:18;6885:26;;6921:71;6989:1;6978:9;6974:17;6965:6;6921:71;:::i;:::-;7002:72;7070:2;7059:9;7055:18;7046:6;7002:72;:::i;:::-;6749:332;;;;;:::o",
  "source": "// pragma solidity ^0.4.18;\npragma solidity ^0.8.18; //>=0.7.6 <=0.8.0;\n\nimport \"./ERC20.sol\";\n\ncontract AtomicSwapERC20ToERC20 {\n\n  struct Swap {\n    uint256 openValue;\n    address openTrader;\n    address openContractAddress;\n    uint256 closeValue;\n    address closeTrader;\n    address closeContractAddress;\n  }\n\n  enum States {\n    INVALID,\n    OPEN,\n    CLOSED,\n    EXPIRED\n  }\n\n  mapping (bytes32 => Swap) private swaps;\n  mapping (bytes32 => States) private swapStates;\n\n  event Open(bytes32 _swapID, address _closeTrader);\n  event Expire(bytes32 _swapID);\n  event Close(bytes32 _swapID);\n\n  modifier onlyInvalidSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.INVALID);\n    _;\n  }\n\n  modifier onlyOpenSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.OPEN);\n    _;\n  }\n\n  function open(bytes32 _swapID, uint256 _openValue, address _openContractAddress, uint256 _closeValue, address _closeTrader, address _closeContractAddress) public onlyInvalidSwaps(_swapID) {\n    // Transfer value from the opening trader to this contract.\n    ERC20 openERC20Contract = ERC20(_openContractAddress);\n    require(_openValue <= openERC20Contract.allowance(msg.sender, address(this)));\n    require(openERC20Contract.transferFrom(msg.sender, address(this), _openValue));\n\n    // Store the details of the swap.\n    Swap memory swap = Swap({\n      openValue: _openValue,\n      openTrader: msg.sender,\n      openContractAddress: _openContractAddress,\n      closeValue: _closeValue,\n      closeTrader: _closeTrader,\n      closeContractAddress: _closeContractAddress\n    });\n    swaps[_swapID] = swap;\n    swapStates[_swapID] = States.OPEN;\n\n    emit Open(_swapID, _closeTrader);\n  }\n\n  function close(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Close the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.CLOSED;\n\n    // Transfer the closing funds from the closing trader to the opening trader.\n    ERC20 closeERC20Contract = ERC20(swap.closeContractAddress);\n    require(swap.closeValue <= closeERC20Contract.allowance(swap.closeTrader, address(this)));\n    require(closeERC20Contract.transferFrom(swap.closeTrader, swap.openTrader, swap.closeValue));\n\n    // Transfer the opening funds from this contract to the closing trader.\n    ERC20 openERC20Contract = ERC20(swap.openContractAddress);\n    require(openERC20Contract.transfer(swap.closeTrader, swap.openValue));\n\n    emit Close(_swapID);\n  }\n\n  function expire(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Expire the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.EXPIRED;\n\n    // Transfer opening value from this contract back to the opening trader.\n    ERC20 openERC20Contract = ERC20(swap.openContractAddress);\n    require(openERC20Contract.transfer(swap.openTrader, swap.openValue));\n\n    emit Expire(_swapID);\n  }\n\n  function check(bytes32 _swapID) public view returns (uint256 openValue, address openContractAddress, uint256 closeValue, address closeTrader, address closeContractAddress) {\n    Swap memory swap = swaps[_swapID];\n    return (swap.openValue, swap.openContractAddress, swap.closeValue, swap.closeTrader, swap.closeContractAddress);\n  }\n}",
  "sourcePath": "/Users/wasim/28march/AtomicSwaps/contracts/AtomicSwapERC20ToERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/AtomicSwapERC20ToERC20.sol",
    "exportedSymbols": {
      "AtomicSwapERC20ToERC20": [
        712
      ],
      "ERC20": [
        1381
      ]
    },
    "id": 713,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 394,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "28:24:1"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 713,
        "sourceUnit": 1382,
        "src": "73:21:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AtomicSwapERC20ToERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 712,
        "linearizedBaseContracts": [
          712
        ],
        "name": "AtomicSwapERC20ToERC20",
        "nameLocation": "105:22:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AtomicSwapERC20ToERC20.Swap",
            "id": 408,
            "members": [
              {
                "constant": false,
                "id": 397,
                "mutability": "mutable",
                "name": "openValue",
                "nameLocation": "159:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 408,
                "src": "151:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 396,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "151:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 399,
                "mutability": "mutable",
                "name": "openTrader",
                "nameLocation": "182:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 408,
                "src": "174:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 398,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "174:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 401,
                "mutability": "mutable",
                "name": "openContractAddress",
                "nameLocation": "206:19:1",
                "nodeType": "VariableDeclaration",
                "scope": 408,
                "src": "198:27:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 400,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "198:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 403,
                "mutability": "mutable",
                "name": "closeValue",
                "nameLocation": "239:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 408,
                "src": "231:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 402,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "231:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 405,
                "mutability": "mutable",
                "name": "closeTrader",
                "nameLocation": "263:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 408,
                "src": "255:19:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 404,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "255:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 407,
                "mutability": "mutable",
                "name": "closeContractAddress",
                "nameLocation": "288:20:1",
                "nodeType": "VariableDeclaration",
                "scope": 408,
                "src": "280:28:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 406,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "280:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nameLocation": "140:4:1",
            "nodeType": "StructDefinition",
            "scope": 712,
            "src": "133:180:1",
            "visibility": "public"
          },
          {
            "canonicalName": "AtomicSwapERC20ToERC20.States",
            "id": 413,
            "members": [
              {
                "id": 409,
                "name": "INVALID",
                "nameLocation": "335:7:1",
                "nodeType": "EnumValue",
                "src": "335:7:1"
              },
              {
                "id": 410,
                "name": "OPEN",
                "nameLocation": "348:4:1",
                "nodeType": "EnumValue",
                "src": "348:4:1"
              },
              {
                "id": 411,
                "name": "CLOSED",
                "nameLocation": "358:6:1",
                "nodeType": "EnumValue",
                "src": "358:6:1"
              },
              {
                "id": 412,
                "name": "EXPIRED",
                "nameLocation": "370:7:1",
                "nodeType": "EnumValue",
                "src": "370:7:1"
              }
            ],
            "name": "States",
            "nameLocation": "322:6:1",
            "nodeType": "EnumDefinition",
            "src": "317:64:1"
          },
          {
            "constant": false,
            "id": 418,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "419:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 712,
            "src": "385:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$408_storage_$",
              "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap)"
            },
            "typeName": {
              "id": 417,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 414,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "394:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "385:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$408_storage_$",
                "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 416,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 415,
                  "name": "Swap",
                  "nameLocations": [
                    "405:4:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 408,
                  "src": "405:4:1"
                },
                "referencedDeclaration": 408,
                "src": "405:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$408_storage_ptr",
                  "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 423,
            "mutability": "mutable",
            "name": "swapStates",
            "nameLocation": "464:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 712,
            "src": "428:46:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
            },
            "typeName": {
              "id": 422,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 419,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "437:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "428:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
                "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 421,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 420,
                  "name": "States",
                  "nameLocations": [
                    "448:6:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 413,
                  "src": "448:6:1"
                },
                "referencedDeclaration": 413,
                "src": "448:6:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$413",
                  "typeString": "enum AtomicSwapERC20ToERC20.States"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "b5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb",
            "id": 429,
            "name": "Open",
            "nameLocation": "485:4:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 425,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "498:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "490:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_closeTrader",
                  "nameLocation": "515:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "507:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:39:1"
            },
            "src": "479:50:1"
          },
          {
            "anonymous": false,
            "eventSelector": "bddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a735",
            "id": 433,
            "name": "Expire",
            "nameLocation": "538:6:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "553:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "545:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "544:17:1"
            },
            "src": "532:30:1"
          },
          {
            "anonymous": false,
            "eventSelector": "c9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28",
            "id": 437,
            "name": "Close",
            "nameLocation": "571:5:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "585:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 437,
                  "src": "577:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:17:1"
            },
            "src": "565:29:1"
          },
          {
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "641:65:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$413",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 442,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "656:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 444,
                          "indexExpression": {
                            "id": 443,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 439,
                            "src": "667:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "656:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$413",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 445,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "679:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$413_$",
                              "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "686:7:1",
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 409,
                          "src": "679:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$413",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "src": "656:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "647:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "647:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "647:47:1"
                },
                {
                  "id": 450,
                  "nodeType": "PlaceholderStatement",
                  "src": "700:1:1"
                }
              ]
            },
            "id": 452,
            "name": "onlyInvalidSwaps",
            "nameLocation": "607:16:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "632:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "624:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:17:1"
            },
            "src": "598:108:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 466,
              "nodeType": "Block",
              "src": "750:62:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$413",
                          "typeString": "enum AtomicSwapERC20ToERC20.States"
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 457,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 423,
                            "src": "765:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 459,
                          "indexExpression": {
                            "id": 458,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "776:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "765:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$413",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 460,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "788:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$413_$",
                              "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                            }
                          },
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "795:4:1",
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 410,
                          "src": "788:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$413",
                            "typeString": "enum AtomicSwapERC20ToERC20.States"
                          }
                        },
                        "src": "765:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "756:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "756:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "756:44:1"
                },
                {
                  "id": 465,
                  "nodeType": "PlaceholderStatement",
                  "src": "806:1:1"
                }
              ]
            },
            "id": 467,
            "name": "onlyOpenSwaps",
            "nameLocation": "719:13:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 454,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "741:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 467,
                  "src": "733:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "732:17:1"
            },
            "src": "710:102:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 550,
              "nodeType": "Block",
              "src": "1004:699:1",
              "statements": [
                {
                  "assignments": [
                    487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 487,
                      "mutability": "mutable",
                      "name": "openERC20Contract",
                      "nameLocation": "1080:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "1074:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1381",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 486,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 485,
                          "name": "ERC20",
                          "nameLocations": [
                            "1074:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1381,
                          "src": "1074:5:1"
                        },
                        "referencedDeclaration": 1381,
                        "src": "1074:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1381",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 491,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 489,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "1106:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 488,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "1100:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1381_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1100:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1381",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1074:53:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 493,
                          "name": "_openValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 471,
                          "src": "1141:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 496,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1183:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1187:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1183:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 500,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1203:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$712",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$712",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                ],
                                "id": 499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1195:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 498,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1195:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1195:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 494,
                              "name": "openERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "1155:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1381",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1173:9:1",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1351,
                            "src": "1155:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1155:54:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1141:68:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1133:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 509,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1255:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1259:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1255:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 513,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1275:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$712",
                                  "typeString": "contract AtomicSwapERC20ToERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$712",
                                  "typeString": "contract AtomicSwapERC20ToERC20"
                                }
                              ],
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1267:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 511,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1267:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1267:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 515,
                            "name": "_openValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "1282:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 507,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "1224:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1381",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1242:12:1",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1371,
                          "src": "1224:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1224:69:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1216:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1216:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:78:1"
                },
                {
                  "assignments": [
                    521
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 521,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "1351:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 550,
                      "src": "1339:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 520,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 519,
                          "name": "Swap",
                          "nameLocations": [
                            "1339:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 408,
                          "src": "1339:4:1"
                        },
                        "referencedDeclaration": 408,
                        "src": "1339:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$408_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 531,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 523,
                        "name": "_openValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "1382:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 524,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1412:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1416:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1412:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "_openContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "1451:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "_closeValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "1491:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 528,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "1523:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 529,
                        "name": "_closeContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 479,
                        "src": "1565:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 522,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "1358:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$408_storage_ptr_$",
                        "typeString": "type(struct AtomicSwapERC20ToERC20.Swap storage pointer)"
                      }
                    },
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1371:9:1",
                      "1400:10:1",
                      "1430:19:1",
                      "1479:10:1",
                      "1510:11:1",
                      "1543:20:1"
                    ],
                    "names": [
                      "openValue",
                      "openTrader",
                      "openContractAddress",
                      "closeValue",
                      "closeTrader",
                      "closeContractAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1358:235:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1339:254:1"
                },
                {
                  "expression": {
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 532,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1599:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$408_storage_$",
                          "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                        }
                      },
                      "id": 534,
                      "indexExpression": {
                        "id": 533,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1605:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1599:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$408_storage",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 535,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "1616:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                      }
                    },
                    "src": "1599:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$408_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:21:1"
                },
                {
                  "expression": {
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 538,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1626:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 540,
                      "indexExpression": {
                        "id": 539,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1637:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1626:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$413",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 541,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1648:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$413_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1655:4:1",
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 410,
                      "src": "1648:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$413",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "1626:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$413",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:33:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 546,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1676:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 547,
                        "name": "_closeTrader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 477,
                        "src": "1685:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 545,
                      "name": "Open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "1671:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1671:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 549,
                  "nodeType": "EmitStatement",
                  "src": "1666:32:1"
                }
              ]
            },
            "functionSelector": "5454a438",
            "id": 551,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 482,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 469,
                    "src": "995:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 481,
                  "name": "onlyInvalidSwaps",
                  "nameLocations": [
                    "978:16:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 452,
                  "src": "978:16:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "978:25:1"
              }
            ],
            "name": "open",
            "nameLocation": "825:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "838:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "830:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 471,
                  "mutability": "mutable",
                  "name": "_openValue",
                  "nameLocation": "855:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "847:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 473,
                  "mutability": "mutable",
                  "name": "_openContractAddress",
                  "nameLocation": "875:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "867:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "_closeValue",
                  "nameLocation": "905:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "897:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "_closeTrader",
                  "nameLocation": "926:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "918:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "_closeContractAddress",
                  "nameLocation": "948:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 551,
                  "src": "940:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "829:141:1"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1004:0:1"
            },
            "scope": 712,
            "src": "816:887:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "1769:689:1",
              "statements": [
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "1810:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "1798:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 560,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 559,
                          "name": "Swap",
                          "nameLocations": [
                            "1798:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 408,
                          "src": "1798:4:1"
                        },
                        "referencedDeclaration": 408,
                        "src": "1798:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$408_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": {
                    "baseExpression": {
                      "id": 562,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "1817:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$408_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 564,
                    "indexExpression": {
                      "id": 563,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "1823:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1817:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$408_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1798:33:1"
                },
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 566,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "1837:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 568,
                      "indexExpression": {
                        "id": 567,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "1848:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1837:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$413",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 569,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1859:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$413_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1866:6:1",
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 411,
                      "src": "1859:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$413",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "1837:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$413",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:35:1"
                },
                {
                  "assignments": [
                    575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 575,
                      "mutability": "mutable",
                      "name": "closeERC20Contract",
                      "nameLocation": "1966:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "1960:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1381",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 574,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 573,
                          "name": "ERC20",
                          "nameLocations": [
                            "1960:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1381,
                          "src": "1960:5:1"
                        },
                        "referencedDeclaration": 1381,
                        "src": "1960:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1381",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 580,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 577,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "1993:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 578,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1998:20:1",
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 407,
                        "src": "1993:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 576,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "1987:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1381_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1987:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1381",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1960:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 582,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "2033:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                              "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2038:10:1",
                          "memberName": "closeValue",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 403,
                          "src": "2033:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 586,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 561,
                                "src": "2081:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                  "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2086:11:1",
                              "memberName": "closeTrader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 405,
                              "src": "2081:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 590,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2107:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$712",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapERC20ToERC20_$712",
                                    "typeString": "contract AtomicSwapERC20ToERC20"
                                  }
                                ],
                                "id": 589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2099:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 588,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2099:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2099:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 584,
                              "name": "closeERC20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 575,
                              "src": "2052:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1381",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2071:9:1",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1351,
                            "src": "2052:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2052:61:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2033:80:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 581,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2025:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:89:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:89:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 599,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "2160:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2165:11:1",
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 405,
                            "src": "2160:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 601,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "2178:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 602,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2183:10:1",
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 399,
                            "src": "2178:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 603,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "2195:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2200:10:1",
                            "memberName": "closeValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 403,
                            "src": "2195:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 597,
                            "name": "closeERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 575,
                            "src": "2128:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1381",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2147:12:1",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1371,
                          "src": "2128:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2128:83:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2120:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2120:92:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "ExpressionStatement",
                  "src": "2120:92:1"
                },
                {
                  "assignments": [
                    610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 610,
                      "mutability": "mutable",
                      "name": "openERC20Contract",
                      "nameLocation": "2301:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "2295:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1381",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 609,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 608,
                          "name": "ERC20",
                          "nameLocations": [
                            "2295:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1381,
                          "src": "2295:5:1"
                        },
                        "referencedDeclaration": 1381,
                        "src": "2295:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1381",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 615,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 612,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 561,
                          "src": "2327:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 613,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2332:19:1",
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 401,
                        "src": "2327:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 611,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "2321:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1381_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2321:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1381",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2295:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 619,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "2393:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 620,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2398:11:1",
                            "memberName": "closeTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 405,
                            "src": "2393:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 621,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 561,
                              "src": "2411:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2416:9:1",
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 397,
                            "src": "2411:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 617,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "2366:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1381",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2384:8:1",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "2366:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2366:60:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2358:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2358:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "ExpressionStatement",
                  "src": "2358:69:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 627,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2445:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 626,
                      "name": "Close",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 437,
                      "src": "2439:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 629,
                  "nodeType": "EmitStatement",
                  "src": "2434:19:1"
                }
              ]
            },
            "functionSelector": "39c79e0c",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 556,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 553,
                    "src": "1760:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 557,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 555,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "1746:13:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 467,
                  "src": "1746:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1746:22:1"
              }
            ],
            "name": "close",
            "nameLocation": "1716:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "1730:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "1722:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:17:1"
            },
            "returnParameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1769:0:1"
            },
            "scope": 712,
            "src": "1707:751:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "2525:352:1",
              "statements": [
                {
                  "assignments": [
                    641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 641,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "2567:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "2555:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 640,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 639,
                          "name": "Swap",
                          "nameLocations": [
                            "2555:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 408,
                          "src": "2555:4:1"
                        },
                        "referencedDeclaration": 408,
                        "src": "2555:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$408_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 645,
                  "initialValue": {
                    "baseExpression": {
                      "id": 642,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "2574:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$408_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 644,
                    "indexExpression": {
                      "id": 643,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "2580:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2574:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$408_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2555:33:1"
                },
                {
                  "expression": {
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 646,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "2594:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$413_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 648,
                      "indexExpression": {
                        "id": 647,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2605:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2594:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$413",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 649,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "2616:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$413_$",
                          "typeString": "type(enum AtomicSwapERC20ToERC20.States)"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2623:7:1",
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 412,
                      "src": "2616:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$413",
                        "typeString": "enum AtomicSwapERC20ToERC20.States"
                      }
                    },
                    "src": "2594:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$413",
                      "typeString": "enum AtomicSwapERC20ToERC20.States"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "2594:36:1"
                },
                {
                  "assignments": [
                    655
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 655,
                      "mutability": "mutable",
                      "name": "openERC20Contract",
                      "nameLocation": "2720:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "2714:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1381",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 654,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 653,
                          "name": "ERC20",
                          "nameLocations": [
                            "2714:5:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1381,
                          "src": "2714:5:1"
                        },
                        "referencedDeclaration": 1381,
                        "src": "2714:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1381",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 660,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 657,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 641,
                          "src": "2746:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 658,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2751:19:1",
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 401,
                        "src": "2746:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 656,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "2740:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1381_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2740:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1381",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2714:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 664,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 641,
                              "src": "2812:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 665,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2817:10:1",
                            "memberName": "openTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 399,
                            "src": "2812:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 666,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 641,
                              "src": "2829:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                                "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                              }
                            },
                            "id": 667,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2834:9:1",
                            "memberName": "openValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 397,
                            "src": "2829:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 662,
                            "name": "openERC20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "2785:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1381",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2803:8:1",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "2785:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2785:59:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2777:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2777:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "2777:68:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 672,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2864:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 671,
                      "name": "Expire",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "2857:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "EmitStatement",
                  "src": "2852:20:1"
                }
              ]
            },
            "functionSelector": "c6441798",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 636,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 633,
                    "src": "2516:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 635,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "2502:13:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 467,
                  "src": "2502:13:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2502:22:1"
              }
            ],
            "name": "expire",
            "nameLocation": "2471:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2486:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "2478:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2478:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2477:17:1"
            },
            "returnParameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2525:0:1"
            },
            "scope": 712,
            "src": "2462:415:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 710,
              "nodeType": "Block",
              "src": "3053:161:1",
              "statements": [
                {
                  "assignments": [
                    693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 693,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "3071:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 710,
                      "src": "3059:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                        "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                      },
                      "typeName": {
                        "id": 692,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 691,
                          "name": "Swap",
                          "nameLocations": [
                            "3059:4:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 408,
                          "src": "3059:4:1"
                        },
                        "referencedDeclaration": 408,
                        "src": "3059:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$408_storage_ptr",
                          "typeString": "struct AtomicSwapERC20ToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 697,
                  "initialValue": {
                    "baseExpression": {
                      "id": 694,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 418,
                      "src": "3078:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$408_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapERC20ToERC20.Swap storage ref)"
                      }
                    },
                    "id": 696,
                    "indexExpression": {
                      "id": 695,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 678,
                      "src": "3084:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3078:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$408_storage",
                      "typeString": "struct AtomicSwapERC20ToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3059:33:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 698,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3106:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3111:9:1",
                        "memberName": "openValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 397,
                        "src": "3106:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 700,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3122:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3127:19:1",
                        "memberName": "openContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 401,
                        "src": "3122:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 702,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3148:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 703,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3153:10:1",
                        "memberName": "closeValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 403,
                        "src": "3148:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 704,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3165:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3170:11:1",
                        "memberName": "closeTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 405,
                        "src": "3165:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 706,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "3183:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$408_memory_ptr",
                            "typeString": "struct AtomicSwapERC20ToERC20.Swap memory"
                          }
                        },
                        "id": 707,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3188:20:1",
                        "memberName": "closeContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 407,
                        "src": "3183:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 708,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3105:104:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$",
                      "typeString": "tuple(uint256,address,uint256,address,address)"
                    }
                  },
                  "functionReturnParameters": 690,
                  "id": 709,
                  "nodeType": "Return",
                  "src": "3098:111:1"
                }
              ]
            },
            "functionSelector": "399e0792",
            "id": 711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "2890:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 678,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2904:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "2896:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 677,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2896:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2895:17:1"
            },
            "returnParameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "openValue",
                  "nameLocation": "2942:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "2934:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "openContractAddress",
                  "nameLocation": "2961:19:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "2953:27:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "closeValue",
                  "nameLocation": "2990:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "2982:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 687,
                  "mutability": "mutable",
                  "name": "closeTrader",
                  "nameLocation": "3010:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "3002:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3002:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 689,
                  "mutability": "mutable",
                  "name": "closeContractAddress",
                  "nameLocation": "3031:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 711,
                  "src": "3023:28:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3023:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2933:119:1"
            },
            "scope": 712,
            "src": "2881:333:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 713,
        "src": "96:3120:1",
        "usedErrors": []
      }
    ],
    "src": "28:3188:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x346580F5c3511a0f88b5e23E9dB3A0fa5509886f",
      "transactionHash": "0xe7e0bfffa1d04c5cb22618c24e4d72b8559fcece4917bec93420a6cc47f500cd"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-28T10:20:20.642Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}