{
  "contractName": "AtomicSwapEtherToERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Close",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "Expire",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_closeTrader",
          "type": "address"
        }
      ],
      "name": "Open",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_erc20Value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_erc20Trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20ContractAddress",
          "type": "address"
        }
      ],
      "name": "open",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_swapID",
          "type": "bytes32"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "erc20Value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "erc20Trader",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20ContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Close\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"Expire\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_closeTrader\",\"type\":\"address\"}],\"name\":\"Open\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20Value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"erc20Trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20ContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"}],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_swapID\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_erc20Value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Trader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20ContractAddress\",\"type\":\"address\"}],\"name\":\"open\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AtomicSwapEtherToERC20.sol\":\"AtomicSwapEtherToERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/AtomicSwapEtherToERC20.sol\":{\"keccak256\":\"0xcf1c3063b896deec2a06f17390056b1699f43e545e2daac97b1c8b5d67cc3243\",\"urls\":[\"bzz-raw://197876b0997e8d44f3d426ad54b53aedf9869213bd599621d4dc9eefb65cc32f\",\"dweb:/ipfs/QmXPKAt5EdxhDCrPDoQBcibrBjuyYzcD2mPDURCjSmxDHm\"]},\"project:/contracts/ERC20.sol\":{\"keccak256\":\"0x5ebfbbc073ab16e1f052f70edfbe32627ab6664b39e676778b8c940e7fce83b2\",\"urls\":[\"bzz-raw://820f227baf344e7e2b62f309ba0ad9bd11bffc9e57b1ed8fd92444ebbc05d9b7\",\"dweb:/ipfs/QmemTXKHvT4oi9CLXLqLuEgS2GcMHu9RxJFv8ZDTwrzyJc\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ded806100206000396000f3fe60806040526004361061003f5760003560e01c8063399e07921461004457806339c79e0c146100845780636e792315146100ad578063c6441798146100c9575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610aa3565b6100f2565b60405161007b9493929190610b2a565b60405180910390f35b34801561009057600080fd5b506100ab60048036038101906100a69190610aa3565b610253565b005b6100c760048036038101906100c29190610bc7565b6105d8565b005b3480156100d557600080fd5b506100f060048036038101906100eb9190610aa3565b610812565b005b60008060008060008060008781526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080600001518160400151826060015183608001519450945094509450509193509193565b806001600381111561026857610267610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561029b5761029a610c2e565b5b146102a557600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026001600085815260200190815260200160002060006101000a81548160ff0219169083600381111561041357610412610c2e565b5b02179055506000816080015190508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8360600151306040518363ffffffff1660e01b8152600401610460929190610c5d565b602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610c9b565b826040015111156104b157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8360600151846020015185604001516040518463ffffffff1660e01b81526004016104fa93929190610cc8565b6020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190610d37565b61054657600080fd5b6000826060015190508073ffffffffffffffffffffffffffffffffffffffff166108fc84600001519081150290604051600060405180830381858888f19350505050158015610599573d6000803e3d6000fd5b507fc9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28856040516105c99190610d73565b60405180910390a15050505050565b83600060038111156105ed576105ec610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff1660038111156106205761061f610c2e565b5b1461062a57600080fd5b60006040518060a001604052803481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152509050806000808881526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600180600088815260200190815260200160002060006101000a81548160ff021916908360038111156107cc576107cb610c2e565b5b02179055507fb5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb8685604051610802929190610d8e565b60405180910390a1505050505050565b806001600381111561082757610826610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561085a57610859610c2e565b5b1461086457600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060036001600085815260200190815260200160002060006101000a81548160ff021916908360038111156109d2576109d1610c2e565b5b02179055506000816020015190508073ffffffffffffffffffffffffffffffffffffffff166108fc83600001519081150290604051600060405180830381858888f19350505050158015610a2a573d6000803e3d6000fd5b507fbddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a73584604051610a5a9190610d73565b60405180910390a150505050565b600080fd5b6000819050919050565b610a8081610a6d565b8114610a8b57600080fd5b50565b600081359050610a9d81610a77565b92915050565b600060208284031215610ab957610ab8610a68565b5b6000610ac784828501610a8e565b91505092915050565b6000819050919050565b610ae381610ad0565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1482610ae9565b9050919050565b610b2481610b09565b82525050565b6000608082019050610b3f6000830187610ada565b610b4c6020830186610ada565b610b596040830185610b1b565b610b666060830184610b1b565b95945050505050565b610b7881610ad0565b8114610b8357600080fd5b50565b600081359050610b9581610b6f565b92915050565b610ba481610b09565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060008060808587031215610be157610be0610a68565b5b6000610bef87828801610a8e565b9450506020610c0087828801610b86565b9350506040610c1187828801610bb2565b9250506060610c2287828801610bb2565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082019050610c726000830185610b1b565b610c7f6020830184610b1b565b9392505050565b600081519050610c9581610b6f565b92915050565b600060208284031215610cb157610cb0610a68565b5b6000610cbf84828501610c86565b91505092915050565b6000606082019050610cdd6000830186610b1b565b610cea6020830185610b1b565b610cf76040830184610ada565b949350505050565b60008115159050919050565b610d1481610cff565b8114610d1f57600080fd5b50565b600081519050610d3181610d0b565b92915050565b600060208284031215610d4d57610d4c610a68565b5b6000610d5b84828501610d22565b91505092915050565b610d6d81610a6d565b82525050565b6000602082019050610d886000830184610d64565b92915050565b6000604082019050610da36000830185610d64565b610db06020830184610b1b565b939250505056fea2646970667358221220f08b5e4d01729713b0c13e8115eb1e214cdc6740eeef267c93a03ee23b22ae1464736f6c63430008120033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063399e07921461004457806339c79e0c146100845780636e792315146100ad578063c6441798146100c9575b600080fd5b34801561005057600080fd5b5061006b60048036038101906100669190610aa3565b6100f2565b60405161007b9493929190610b2a565b60405180910390f35b34801561009057600080fd5b506100ab60048036038101906100a69190610aa3565b610253565b005b6100c760048036038101906100c29190610bc7565b6105d8565b005b3480156100d557600080fd5b506100f060048036038101906100eb9190610aa3565b610812565b005b60008060008060008060008781526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080600001518160400151826060015183608001519450945094509450509193509193565b806001600381111561026857610267610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561029b5761029a610c2e565b5b146102a557600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060026001600085815260200190815260200160002060006101000a81548160ff0219169083600381111561041357610412610c2e565b5b02179055506000816080015190508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e8360600151306040518363ffffffff1660e01b8152600401610460929190610c5d565b602060405180830381865afa15801561047d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a19190610c9b565b826040015111156104b157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd8360600151846020015185604001516040518463ffffffff1660e01b81526004016104fa93929190610cc8565b6020604051808303816000875af1158015610519573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053d9190610d37565b61054657600080fd5b6000826060015190508073ffffffffffffffffffffffffffffffffffffffff166108fc84600001519081150290604051600060405180830381858888f19350505050158015610599573d6000803e3d6000fd5b507fc9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28856040516105c99190610d73565b60405180910390a15050505050565b83600060038111156105ed576105ec610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff1660038111156106205761061f610c2e565b5b1461062a57600080fd5b60006040518060a001604052803481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152509050806000808881526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600180600088815260200190815260200160002060006101000a81548160ff021916908360038111156107cc576107cb610c2e565b5b02179055507fb5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb8685604051610802929190610d8e565b60405180910390a1505050505050565b806001600381111561082757610826610c2e565b5b6001600083815260200190815260200160002060009054906101000a900460ff16600381111561085a57610859610c2e565b5b1461086457600080fd5b60008060008481526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060036001600085815260200190815260200160002060006101000a81548160ff021916908360038111156109d2576109d1610c2e565b5b02179055506000816020015190508073ffffffffffffffffffffffffffffffffffffffff166108fc83600001519081150290604051600060405180830381858888f19350505050158015610a2a573d6000803e3d6000fd5b507fbddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a73584604051610a5a9190610d73565b60405180910390a150505050565b600080fd5b6000819050919050565b610a8081610a6d565b8114610a8b57600080fd5b50565b600081359050610a9d81610a77565b92915050565b600060208284031215610ab957610ab8610a68565b5b6000610ac784828501610a8e565b91505092915050565b6000819050919050565b610ae381610ad0565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1482610ae9565b9050919050565b610b2481610b09565b82525050565b6000608082019050610b3f6000830187610ada565b610b4c6020830186610ada565b610b596040830185610b1b565b610b666060830184610b1b565b95945050505050565b610b7881610ad0565b8114610b8357600080fd5b50565b600081359050610b9581610b6f565b92915050565b610ba481610b09565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060008060808587031215610be157610be0610a68565b5b6000610bef87828801610a8e565b9450506020610c0087828801610b86565b9350506040610c1187828801610bb2565b9250506060610c2287828801610bb2565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082019050610c726000830185610b1b565b610c7f6020830184610b1b565b9392505050565b600081519050610c9581610b6f565b92915050565b600060208284031215610cb157610cb0610a68565b5b6000610cbf84828501610c86565b91505092915050565b6000606082019050610cdd6000830186610b1b565b610cea6020830185610b1b565b610cf76040830184610ada565b949350505050565b60008115159050919050565b610d1481610cff565b8114610d1f57600080fd5b50565b600081519050610d3181610d0b565b92915050565b600060208284031215610d4d57610d4c610a68565b5b6000610d5b84828501610d22565b91505092915050565b610d6d81610a6d565b82525050565b6000602082019050610d886000830184610d64565b92915050565b6000604082019050610da36000830185610d64565b610db06020830184610b1b565b939250505056fea2646970667358221220f08b5e4d01729713b0c13e8115eb1e214cdc6740eeef267c93a03ee23b22ae1464736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6343:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:5",
                "type": ""
              }
            ],
            "src": "7:75:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:5"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:5",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:5"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:5",
                "type": ""
              }
            ],
            "src": "334:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:5"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:5",
                "type": ""
              }
            ],
            "src": "417:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:5"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:5",
                "type": ""
              }
            ],
            "src": "545:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:5",
                "type": ""
              }
            ],
            "src": "690:329:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1070:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1080:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1091:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1080:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1052:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1062:7:5",
                "type": ""
              }
            ],
            "src": "1025:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1190:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1213:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1195:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1195:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1183:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1183:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1183:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1161:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1168:3:5",
                "type": ""
              }
            ],
            "src": "1108:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1302:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1309:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1298:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1287:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1259:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1269:7:5",
                "type": ""
              }
            ],
            "src": "1232:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1409:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1419:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1448:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1430:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1430:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1419:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1391:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1401:7:5",
                "type": ""
              }
            ],
            "src": "1364:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1531:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1548:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1571:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1553:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1553:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1541:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1541:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1541:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1519:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1526:3:5",
                "type": ""
              }
            ],
            "src": "1466:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1772:371:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1782:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1794:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1805:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1790:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1790:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1782:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1863:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1876:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1887:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1872:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1819:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1819:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1944:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1957:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1968:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1953:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1953:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1900:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1900:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1900:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2026:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2039:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2050:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2035:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1982:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1982:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1982:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2108:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2121:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2132:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2117:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2117:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2064:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2064:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2064:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1720:9:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1732:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1740:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1748:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1756:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1767:4:5",
                "type": ""
              }
            ],
            "src": "1590:553:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2192:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2249:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2258:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2261:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2251:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2251:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2251:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2215:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2240:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2222:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2222:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2212:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2212:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2205:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2205:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2202:63:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2185:5:5",
                "type": ""
              }
            ],
            "src": "2149:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2329:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2339:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2361:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2348:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2348:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2339:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2404:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2377:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2377:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2377:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2307:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2315:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2323:5:5",
                "type": ""
              }
            ],
            "src": "2277:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2522:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2531:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2534:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2524:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2524:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2524:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2488:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2513:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2495:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2495:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2485:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2485:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2478:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2475:63:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2458:5:5",
                "type": ""
              }
            ],
            "src": "2422:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2602:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2612:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2634:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2621:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2621:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2612:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2677:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2650:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2650:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2650:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2580:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2588:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2596:5:5",
                "type": ""
              }
            ],
            "src": "2550:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2812:648:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2859:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2861:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2861:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2861:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2833:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2842:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2854:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2825:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2825:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "2822:120:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2952:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2967:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2971:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2996:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3031:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3042:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3027:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3027:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3051:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3006:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3006:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2996:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3079:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3094:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3108:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3098:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3124:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3159:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3170:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3155:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3155:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3179:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3134:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3134:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3124:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3207:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3222:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3236:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3226:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3252:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3287:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3298:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3283:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3283:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3307:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3262:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3262:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3252:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3335:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3350:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3364:2:5",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3354:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3380:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3415:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3426:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3411:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3411:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3435:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3390:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3390:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3380:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2758:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2769:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2781:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2789:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2797:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2805:6:5",
                "type": ""
              }
            ],
            "src": "2695:765:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3494:152:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3514:77:5",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3504:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3504:88:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3504:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3608:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3611:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3601:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3601:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3601:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3632:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3635:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3625:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3625:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3625:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "3466:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3778:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3788:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3800:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3811:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3796:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3796:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3788:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3868:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3881:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3892:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3877:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3877:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3824:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3824:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3824:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3949:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3962:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3973:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3958:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3958:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3905:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3905:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3742:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3754:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3762:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3773:4:5",
                "type": ""
              }
            ],
            "src": "3652:332:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4053:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4063:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4078:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4072:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4072:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4063:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4121:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4094:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4094:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4031:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4039:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4047:5:5",
                "type": ""
              }
            ],
            "src": "3990:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4216:274:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4262:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4264:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4264:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4264:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4237:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4246:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4233:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4233:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4258:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4229:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4229:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4226:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4355:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4370:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4384:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4374:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4399:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4445:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4456:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4441:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4441:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4465:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4409:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4409:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4399:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4186:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4197:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4209:6:5",
                "type": ""
              }
            ],
            "src": "4139:351:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4650:288:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4660:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4672:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4683:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4668:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4668:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4660:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4740:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4753:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4764:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4749:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4749:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4696:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4696:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4696:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4821:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4834:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4845:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4830:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4830:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4777:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4777:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4777:72:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4903:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4916:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4927:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4912:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4912:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4859:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4859:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4859:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4606:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4618:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4626:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4634:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4645:4:5",
                "type": ""
              }
            ],
            "src": "4496:442:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4986:48:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4996:32:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5021:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5014:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5014:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5007:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5007:21:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4996:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4968:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4978:7:5",
                "type": ""
              }
            ],
            "src": "4944:90:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5080:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5134:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5143:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5146:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5136:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5136:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5136:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5103:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5125:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "5110:14:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5110:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5100:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5100:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5093:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5093:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5090:60:5"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5073:5:5",
                "type": ""
              }
            ],
            "src": "5040:116:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5222:77:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5232:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5247:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5241:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5241:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "5232:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5287:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "5263:23:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5263:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5263:30:5"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5200:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5208:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5216:5:5",
                "type": ""
              }
            ],
            "src": "5162:137:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5379:271:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5425:83:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5427:77:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5427:79:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5427:79:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5400:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5409:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5396:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5396:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5421:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5392:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5392:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "5389:119:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5518:125:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5533:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5547:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5537:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5562:71:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5605:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5616:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5601:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5601:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5625:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5572:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5572:61:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5562:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5349:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5360:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5372:6:5",
                "type": ""
              }
            ],
            "src": "5305:345:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5738:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5761:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5743:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5743:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5731:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5731:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5731:37:5"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5709:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5716:3:5",
                "type": ""
              }
            ],
            "src": "5656:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5878:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5888:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5900:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5911:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5896:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5888:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5968:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5981:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5992:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5977:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5977:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5924:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5924:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5924:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5850:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5862:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5873:4:5",
                "type": ""
              }
            ],
            "src": "5780:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6134:206:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6144:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6156:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6167:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6152:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6152:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6144:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6224:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6237:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6248:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6233:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6233:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6180:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6180:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6180:71:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6305:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6318:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6329:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6314:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6314:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6261:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6261:72:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6261:72:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6098:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6110:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6118:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6129:4:5",
                "type": ""
              }
            ],
            "src": "6008:332:5"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "96:2548:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "96:2548:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2371:271;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1281:701;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;778:499;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1986:381;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2371:271;2424:13;2439:18;2459:19;2480:28;2516:16;2535:5;:14;2541:7;2535:14;;;;;;;;;;;2516:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2564:4;:10;;;2576:4;:15;;;2593:4;:16;;;2611:4;:25;;;2555:82;;;;;;;;;2371:271;;;;;:::o;1281:701::-;1334:7;750:11;727:34;;;;;;;;:::i;:::-;;:10;:19;738:7;727:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;718:44;;;;;;1372:16:::1;1391:5:::0;:14:::1;1397:7;1391:14;;;;;;;;;;;1372:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;1433:13;1411:10;:19;1422:7;1411:19;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1526:19;1554:4;:25;;;1526:54;;1613:13;:23;;;1637:4;:16;;;1663:4;1613:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1594:4;:15;;;:75;;1586:84;;;::::0;::::1;;1684:13;:26;;;1711:4;:16;;;1729:4;:14;;;1745:4;:15;;;1684:77;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1676:86;;;::::0;::::1;;1839:34;1884:4;:16;;;1839:62;;1907:18;:27;;:39;1935:4;:10;;;1907:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1963:14;1969:7;1963:14;;;;;;:::i;:::-;;;;;;;;1343:639;;;1281:701:::0;;:::o;778:499::-;907:7;641:14;618:37;;;;;;;;:::i;:::-;;:10;:19;629:7;618:19;;;;;;;;;;;;;;;;;;;;;:37;;;;;;;;:::i;:::-;;;609:47;;;;;;968:16:::1;987:180;;;;;;;;1007:9;987:180;;;;1035:10;987:180;;;;;;1065:11;987:180;;;;1097:12;987:180;;;;;;1139:21;987:180;;;;::::0;968:199:::1;;1190:4;1173:5;:14:::0;1179:7:::1;1173:14;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:11;1200:10:::0;:19:::1;1211:7;1200:19;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1245:27;1250:7;1259:12;1245:27;;;;;;;:::i;:::-;;;;;;;;924:353;778:499:::0;;;;;:::o;1986:381::-;2040:7;750:11;727:34;;;;;;;;:::i;:::-;;:10;:19;738:7;727:19;;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;:::i;:::-;;;718:44;;;;;;2079:16:::1;2098:5:::0;:14:::1;2104:7;2098:14;;;;;;;;;;;2079:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2140:14;2118:10;:19;2129:7;2118:19;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2235:32;2278:4;:14;;;2235:58;;2299:16;:25;;:37;2325:4;:10;;;2299:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2347:15;2354:7;2347:15;;;;;;:::i;:::-;;;;;;;;2049:318;;1986:381:::0;;:::o;88:117:5:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:118::-;1195:24;1213:5;1195:24;:::i;:::-;1190:3;1183:37;1108:118;;:::o;1232:126::-;1269:7;1309:42;1302:5;1298:54;1287:65;;1232:126;;;:::o;1364:96::-;1401:7;1430:24;1448:5;1430:24;:::i;:::-;1419:35;;1364:96;;;:::o;1466:118::-;1553:24;1571:5;1553:24;:::i;:::-;1548:3;1541:37;1466:118;;:::o;1590:553::-;1767:4;1805:3;1794:9;1790:19;1782:27;;1819:71;1887:1;1876:9;1872:17;1863:6;1819:71;:::i;:::-;1900:72;1968:2;1957:9;1953:18;1944:6;1900:72;:::i;:::-;1982;2050:2;2039:9;2035:18;2026:6;1982:72;:::i;:::-;2064;2132:2;2121:9;2117:18;2108:6;2064:72;:::i;:::-;1590:553;;;;;;;:::o;2149:122::-;2222:24;2240:5;2222:24;:::i;:::-;2215:5;2212:35;2202:63;;2261:1;2258;2251:12;2202:63;2149:122;:::o;2277:139::-;2323:5;2361:6;2348:20;2339:29;;2377:33;2404:5;2377:33;:::i;:::-;2277:139;;;;:::o;2422:122::-;2495:24;2513:5;2495:24;:::i;:::-;2488:5;2485:35;2475:63;;2534:1;2531;2524:12;2475:63;2422:122;:::o;2550:139::-;2596:5;2634:6;2621:20;2612:29;;2650:33;2677:5;2650:33;:::i;:::-;2550:139;;;;:::o;2695:765::-;2781:6;2789;2797;2805;2854:3;2842:9;2833:7;2829:23;2825:33;2822:120;;;2861:79;;:::i;:::-;2822:120;2981:1;3006:53;3051:7;3042:6;3031:9;3027:22;3006:53;:::i;:::-;2996:63;;2952:117;3108:2;3134:53;3179:7;3170:6;3159:9;3155:22;3134:53;:::i;:::-;3124:63;;3079:118;3236:2;3262:53;3307:7;3298:6;3287:9;3283:22;3262:53;:::i;:::-;3252:63;;3207:118;3364:2;3390:53;3435:7;3426:6;3415:9;3411:22;3390:53;:::i;:::-;3380:63;;3335:118;2695:765;;;;;;;:::o;3466:180::-;3514:77;3511:1;3504:88;3611:4;3608:1;3601:15;3635:4;3632:1;3625:15;3652:332;3773:4;3811:2;3800:9;3796:18;3788:26;;3824:71;3892:1;3881:9;3877:17;3868:6;3824:71;:::i;:::-;3905:72;3973:2;3962:9;3958:18;3949:6;3905:72;:::i;:::-;3652:332;;;;;:::o;3990:143::-;4047:5;4078:6;4072:13;4063:22;;4094:33;4121:5;4094:33;:::i;:::-;3990:143;;;;:::o;4139:351::-;4209:6;4258:2;4246:9;4237:7;4233:23;4229:32;4226:119;;;4264:79;;:::i;:::-;4226:119;4384:1;4409:64;4465:7;4456:6;4445:9;4441:22;4409:64;:::i;:::-;4399:74;;4355:128;4139:351;;;;:::o;4496:442::-;4645:4;4683:2;4672:9;4668:18;4660:26;;4696:71;4764:1;4753:9;4749:17;4740:6;4696:71;:::i;:::-;4777:72;4845:2;4834:9;4830:18;4821:6;4777:72;:::i;:::-;4859;4927:2;4916:9;4912:18;4903:6;4859:72;:::i;:::-;4496:442;;;;;;:::o;4944:90::-;4978:7;5021:5;5014:13;5007:21;4996:32;;4944:90;;;:::o;5040:116::-;5110:21;5125:5;5110:21;:::i;:::-;5103:5;5100:32;5090:60;;5146:1;5143;5136:12;5090:60;5040:116;:::o;5162:137::-;5216:5;5247:6;5241:13;5232:22;;5263:30;5287:5;5263:30;:::i;:::-;5162:137;;;;:::o;5305:345::-;5372:6;5421:2;5409:9;5400:7;5396:23;5392:32;5389:119;;;5427:79;;:::i;:::-;5389:119;5547:1;5572:61;5625:7;5616:6;5605:9;5601:22;5572:61;:::i;:::-;5562:71;;5518:125;5305:345;;;;:::o;5656:118::-;5743:24;5761:5;5743:24;:::i;:::-;5738:3;5731:37;5656:118;;:::o;5780:222::-;5873:4;5911:2;5900:9;5896:18;5888:26;;5924:71;5992:1;5981:9;5977:17;5968:6;5924:71;:::i;:::-;5780:222;;;;:::o;6008:332::-;6129:4;6167:2;6156:9;6152:18;6144:26;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6008:332;;;;;:::o",
  "source": "// pragma solidity ^0.4.18;\npragma solidity ^0.8.18; //>=0.7.6 <=0.8.0;\n\nimport \"./ERC20.sol\";\n\ncontract AtomicSwapEtherToERC20 {\n\n  struct Swap {\n    uint256 value;\n    address ethTrader;\n    uint256 erc20Value;\n    address erc20Trader;\n    address erc20ContractAddress;\n  }\n\n  enum States {\n    INVALID,\n    OPEN,\n    CLOSED,\n    EXPIRED\n  }\n\n  mapping (bytes32 => Swap) private swaps;\n  mapping (bytes32 => States) private swapStates;\n\n  event Open(bytes32 _swapID, address _closeTrader);\n  event Expire(bytes32 _swapID);\n  event Close(bytes32 _swapID);\n\n  modifier onlyInvalidSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.INVALID);\n    _;\n  }\n\n  modifier onlyOpenSwaps(bytes32 _swapID) {\n    require (swapStates[_swapID] == States.OPEN);\n    _;\n  }\n\n  function open(bytes32 _swapID, uint256 _erc20Value, address _erc20Trader, address _erc20ContractAddress) public onlyInvalidSwaps(_swapID) payable {\n    // Store the details of the swap.\n    Swap memory swap = Swap({\n      value: msg.value,\n      ethTrader: msg.sender,\n      erc20Value: _erc20Value,\n      erc20Trader: _erc20Trader,\n      erc20ContractAddress: _erc20ContractAddress\n    });\n    swaps[_swapID] = swap;\n    swapStates[_swapID] = States.OPEN;\n\n    emit Open(_swapID, _erc20Trader);\n  }\n\n  function close(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Close the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.CLOSED;\n\n    // Transfer the ERC20 funds from the ERC20 trader to the ETH trader.\n    ERC20 erc20Contract = ERC20(swap.erc20ContractAddress);\n    require(swap.erc20Value <= erc20Contract.allowance(swap.erc20Trader, address(this)));\n    require(erc20Contract.transferFrom(swap.erc20Trader, swap.ethTrader, swap.erc20Value));\n\n    // Transfer the ETH funds from this contract to the ERC20 trader.\n    address payable erc20TraderPayable = payable(swap.erc20Trader);\n    erc20TraderPayable.transfer(swap.value);\n\n    \n    emit Close(_swapID);\n  }\n\n  function expire(bytes32 _swapID) public onlyOpenSwaps(_swapID) {\n    // Expire the swap.\n    Swap memory swap = swaps[_swapID];\n    swapStates[_swapID] = States.EXPIRED;\n\n    // Transfer the ETH value from this contract back to the ETH trader.\n\n    address payable ethTraderPayable = payable(swap.ethTrader);\n    ethTraderPayable.transfer(swap.value);\n    emit Expire(_swapID);\n  }\n\n  function check(bytes32 _swapID) public view returns (uint256 value, uint256 erc20Value, address erc20Trader, address erc20ContractAddress) {\n    Swap memory swap = swaps[_swapID];\n    return  (swap.value, swap.erc20Value, swap.erc20Trader, swap.erc20ContractAddress);\n  }\n}\n",
  "sourcePath": "/Users/wasim/28march/AtomicSwaps/contracts/AtomicSwapEtherToERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/AtomicSwapEtherToERC20.sol",
    "exportedSymbols": {
      "AtomicSwapEtherToERC20": [
        1315
      ],
      "ERC20": [
        1381
      ]
    },
    "id": 1316,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1047,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "28:24:3"
      },
      {
        "absolutePath": "project:/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 1048,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1316,
        "sourceUnit": 1382,
        "src": "73:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AtomicSwapEtherToERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1315,
        "linearizedBaseContracts": [
          1315
        ],
        "name": "AtomicSwapEtherToERC20",
        "nameLocation": "105:22:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AtomicSwapEtherToERC20.Swap",
            "id": 1059,
            "members": [
              {
                "constant": false,
                "id": 1050,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "159:5:3",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "151:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1049,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "151:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1052,
                "mutability": "mutable",
                "name": "ethTrader",
                "nameLocation": "178:9:3",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "170:17:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1051,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "170:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1054,
                "mutability": "mutable",
                "name": "erc20Value",
                "nameLocation": "201:10:3",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "193:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1053,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "193:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1056,
                "mutability": "mutable",
                "name": "erc20Trader",
                "nameLocation": "225:11:3",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "217:19:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1055,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1058,
                "mutability": "mutable",
                "name": "erc20ContractAddress",
                "nameLocation": "250:20:3",
                "nodeType": "VariableDeclaration",
                "scope": 1059,
                "src": "242:28:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1057,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "242:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Swap",
            "nameLocation": "140:4:3",
            "nodeType": "StructDefinition",
            "scope": 1315,
            "src": "133:142:3",
            "visibility": "public"
          },
          {
            "canonicalName": "AtomicSwapEtherToERC20.States",
            "id": 1064,
            "members": [
              {
                "id": 1060,
                "name": "INVALID",
                "nameLocation": "297:7:3",
                "nodeType": "EnumValue",
                "src": "297:7:3"
              },
              {
                "id": 1061,
                "name": "OPEN",
                "nameLocation": "310:4:3",
                "nodeType": "EnumValue",
                "src": "310:4:3"
              },
              {
                "id": 1062,
                "name": "CLOSED",
                "nameLocation": "320:6:3",
                "nodeType": "EnumValue",
                "src": "320:6:3"
              },
              {
                "id": 1063,
                "name": "EXPIRED",
                "nameLocation": "332:7:3",
                "nodeType": "EnumValue",
                "src": "332:7:3"
              }
            ],
            "name": "States",
            "nameLocation": "284:6:3",
            "nodeType": "EnumDefinition",
            "src": "279:64:3"
          },
          {
            "constant": false,
            "id": 1069,
            "mutability": "mutable",
            "name": "swaps",
            "nameLocation": "381:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1315,
            "src": "347:39:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$1059_storage_$",
              "typeString": "mapping(bytes32 => struct AtomicSwapEtherToERC20.Swap)"
            },
            "typeName": {
              "id": 1068,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1065,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "347:25:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$1059_storage_$",
                "typeString": "mapping(bytes32 => struct AtomicSwapEtherToERC20.Swap)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1067,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1066,
                  "name": "Swap",
                  "nameLocations": [
                    "367:4:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1059,
                  "src": "367:4:3"
                },
                "referencedDeclaration": 1059,
                "src": "367:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Swap_$1059_storage_ptr",
                  "typeString": "struct AtomicSwapEtherToERC20.Swap"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1074,
            "mutability": "mutable",
            "name": "swapStates",
            "nameLocation": "426:10:3",
            "nodeType": "VariableDeclaration",
            "scope": 1315,
            "src": "390:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
              "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
            },
            "typeName": {
              "id": 1073,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1070,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "399:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "390:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
                "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1072,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1071,
                  "name": "States",
                  "nameLocations": [
                    "410:6:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1064,
                  "src": "410:6:3"
                },
                "referencedDeclaration": 1064,
                "src": "410:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_States_$1064",
                  "typeString": "enum AtomicSwapEtherToERC20.States"
                }
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "b5894ff5a344c5160302de0b2027c5b55f4914e9d8e8c11b377b559e5ec789eb",
            "id": 1080,
            "name": "Open",
            "nameLocation": "447:4:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1076,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "460:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "452:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "452:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1078,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_closeTrader",
                  "nameLocation": "477:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1080,
                  "src": "469:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "451:39:3"
            },
            "src": "441:50:3"
          },
          {
            "anonymous": false,
            "eventSelector": "bddd9b693ea862fad6ecf78fd51c065be26fda94d1f3cad3a7d691453a38a735",
            "id": 1084,
            "name": "Expire",
            "nameLocation": "500:6:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "515:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1084,
                  "src": "507:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1081,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "506:17:3"
            },
            "src": "494:30:3"
          },
          {
            "anonymous": false,
            "eventSelector": "c9d8209586aca26a4f59cc70108e4cf2f637da8cb4133c78a3946bc50581ea28",
            "id": 1088,
            "name": "Close",
            "nameLocation": "533:5:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "547:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "539:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "539:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "538:17:3"
            },
            "src": "527:29:3"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "603:65:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$1064",
                          "typeString": "enum AtomicSwapEtherToERC20.States"
                        },
                        "id": 1098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1093,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "618:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
                            }
                          },
                          "id": 1095,
                          "indexExpression": {
                            "id": 1094,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "629:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "618:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$1064",
                            "typeString": "enum AtomicSwapEtherToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1096,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1064,
                            "src": "641:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$1064_$",
                              "typeString": "type(enum AtomicSwapEtherToERC20.States)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "648:7:3",
                          "memberName": "INVALID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1060,
                          "src": "641:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$1064",
                            "typeString": "enum AtomicSwapEtherToERC20.States"
                          }
                        },
                        "src": "618:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "609:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1100,
                  "nodeType": "ExpressionStatement",
                  "src": "609:47:3"
                },
                {
                  "id": 1101,
                  "nodeType": "PlaceholderStatement",
                  "src": "662:1:3"
                }
              ]
            },
            "id": 1103,
            "name": "onlyInvalidSwaps",
            "nameLocation": "569:16:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "594:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "586:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:17:3"
            },
            "src": "560:108:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1117,
              "nodeType": "Block",
              "src": "712:62:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_States_$1064",
                          "typeString": "enum AtomicSwapEtherToERC20.States"
                        },
                        "id": 1113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1108,
                            "name": "swapStates",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1074,
                            "src": "727:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
                              "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
                            }
                          },
                          "id": 1110,
                          "indexExpression": {
                            "id": 1109,
                            "name": "_swapID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "738:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "727:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$1064",
                            "typeString": "enum AtomicSwapEtherToERC20.States"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1111,
                            "name": "States",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1064,
                            "src": "750:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_States_$1064_$",
                              "typeString": "type(enum AtomicSwapEtherToERC20.States)"
                            }
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "757:4:3",
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1061,
                          "src": "750:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_States_$1064",
                            "typeString": "enum AtomicSwapEtherToERC20.States"
                          }
                        },
                        "src": "727:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "718:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "718:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "718:44:3"
                },
                {
                  "id": 1116,
                  "nodeType": "PlaceholderStatement",
                  "src": "768:1:3"
                }
              ]
            },
            "id": 1118,
            "name": "onlyOpenSwaps",
            "nameLocation": "681:13:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "703:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1118,
                  "src": "695:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "695:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "694:17:3"
            },
            "src": "672:102:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1163,
              "nodeType": "Block",
              "src": "924:353:3",
              "statements": [
                {
                  "assignments": [
                    1134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1134,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "980:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1163,
                      "src": "968:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                        "typeString": "struct AtomicSwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 1133,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1132,
                          "name": "Swap",
                          "nameLocations": [
                            "968:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1059,
                          "src": "968:4:3"
                        },
                        "referencedDeclaration": 1059,
                        "src": "968:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1059_storage_ptr",
                          "typeString": "struct AtomicSwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1144,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1136,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1007:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1011:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1007:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1138,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1035:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1039:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1035:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1140,
                        "name": "_erc20Value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "1065:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1141,
                        "name": "_erc20Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "1097:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1142,
                        "name": "_erc20ContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "1139:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1135,
                      "name": "Swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "987:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Swap_$1059_storage_ptr_$",
                        "typeString": "type(struct AtomicSwapEtherToERC20.Swap storage pointer)"
                      }
                    },
                    "id": 1143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1000:5:3",
                      "1024:9:3",
                      "1053:10:3",
                      "1084:11:3",
                      "1117:20:3"
                    ],
                    "names": [
                      "value",
                      "ethTrader",
                      "erc20Value",
                      "erc20Trader",
                      "erc20ContractAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "987:180:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                      "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "968:199:3"
                },
                {
                  "expression": {
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1145,
                        "name": "swaps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1069,
                        "src": "1173:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$1059_storage_$",
                          "typeString": "mapping(bytes32 => struct AtomicSwapEtherToERC20.Swap storage ref)"
                        }
                      },
                      "id": 1147,
                      "indexExpression": {
                        "id": 1146,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "1179:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1173:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1059_storage",
                        "typeString": "struct AtomicSwapEtherToERC20.Swap storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1148,
                      "name": "swap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1134,
                      "src": "1190:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                        "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                      }
                    },
                    "src": "1173:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$1059_storage",
                      "typeString": "struct AtomicSwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1173:21:3"
                },
                {
                  "expression": {
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1151,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1200:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
                        }
                      },
                      "id": 1153,
                      "indexExpression": {
                        "id": 1152,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "1211:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1200:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$1064",
                        "typeString": "enum AtomicSwapEtherToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1154,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1222:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$1064_$",
                          "typeString": "type(enum AtomicSwapEtherToERC20.States)"
                        }
                      },
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1229:4:3",
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1061,
                      "src": "1222:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$1064",
                        "typeString": "enum AtomicSwapEtherToERC20.States"
                      }
                    },
                    "src": "1200:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$1064",
                      "typeString": "enum AtomicSwapEtherToERC20.States"
                    }
                  },
                  "id": 1157,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:33:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1159,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1120,
                        "src": "1250:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1160,
                        "name": "_erc20Trader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "1259:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1158,
                      "name": "Open",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1080,
                      "src": "1245:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1162,
                  "nodeType": "EmitStatement",
                  "src": "1240:32:3"
                }
              ]
            },
            "functionSelector": "6e792315",
            "id": 1164,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1129,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1120,
                    "src": "907:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1130,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1128,
                  "name": "onlyInvalidSwaps",
                  "nameLocations": [
                    "890:16:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1103,
                  "src": "890:16:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "890:25:3"
              }
            ],
            "name": "open",
            "nameLocation": "787:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "800:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "792:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "_erc20Value",
                  "nameLocation": "817:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "809:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "_erc20Trader",
                  "nameLocation": "838:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "830:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "830:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "_erc20ContractAddress",
                  "nameLocation": "860:21:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1164,
                  "src": "852:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:91:3"
            },
            "returnParameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:0:3"
            },
            "scope": 1315,
            "src": "778:499:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "1343:639:3",
              "statements": [
                {
                  "assignments": [
                    1174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1174,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "1384:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "1372:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                        "typeString": "struct AtomicSwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 1173,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1172,
                          "name": "Swap",
                          "nameLocations": [
                            "1372:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1059,
                          "src": "1372:4:3"
                        },
                        "referencedDeclaration": 1059,
                        "src": "1372:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1059_storage_ptr",
                          "typeString": "struct AtomicSwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1178,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1175,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "1391:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$1059_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapEtherToERC20.Swap storage ref)"
                      }
                    },
                    "id": 1177,
                    "indexExpression": {
                      "id": 1176,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1166,
                      "src": "1397:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1391:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$1059_storage",
                      "typeString": "struct AtomicSwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1372:33:3"
                },
                {
                  "expression": {
                    "id": 1184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1179,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "1411:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "id": 1180,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "1422:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1411:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$1064",
                        "typeString": "enum AtomicSwapEtherToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1182,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "1433:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$1064_$",
                          "typeString": "type(enum AtomicSwapEtherToERC20.States)"
                        }
                      },
                      "id": 1183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1440:6:3",
                      "memberName": "CLOSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1062,
                      "src": "1433:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$1064",
                        "typeString": "enum AtomicSwapEtherToERC20.States"
                      }
                    },
                    "src": "1411:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$1064",
                      "typeString": "enum AtomicSwapEtherToERC20.States"
                    }
                  },
                  "id": 1185,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:35:3"
                },
                {
                  "assignments": [
                    1188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1188,
                      "mutability": "mutable",
                      "name": "erc20Contract",
                      "nameLocation": "1532:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "1526:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$1381",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 1187,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1186,
                          "name": "ERC20",
                          "nameLocations": [
                            "1526:5:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1381,
                          "src": "1526:5:3"
                        },
                        "referencedDeclaration": 1381,
                        "src": "1526:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$1381",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1193,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1190,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "1554:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1559:20:3",
                        "memberName": "erc20ContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1058,
                        "src": "1554:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1189,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1381,
                      "src": "1548:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$1381_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1548:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$1381",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1526:54:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1195,
                            "name": "swap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1174,
                            "src": "1594:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                              "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1599:10:3",
                          "memberName": "erc20Value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1054,
                          "src": "1594:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1199,
                                "name": "swap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1174,
                                "src": "1637:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                                  "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                                }
                              },
                              "id": 1200,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1642:11:3",
                              "memberName": "erc20Trader",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1056,
                              "src": "1637:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1203,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1663:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AtomicSwapEtherToERC20_$1315",
                                    "typeString": "contract AtomicSwapEtherToERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AtomicSwapEtherToERC20_$1315",
                                    "typeString": "contract AtomicSwapEtherToERC20"
                                  }
                                ],
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1655:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1201,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1655:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1655:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1197,
                              "name": "erc20Contract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1188,
                              "src": "1613:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$1381",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1627:9:3",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1351,
                            "src": "1613:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1613:56:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1594:75:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1586:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1586:84:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1208,
                  "nodeType": "ExpressionStatement",
                  "src": "1586:84:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1212,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "1711:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                                "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                              }
                            },
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1716:11:3",
                            "memberName": "erc20Trader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "1711:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1214,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "1729:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                                "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                              }
                            },
                            "id": 1215,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1734:9:3",
                            "memberName": "ethTrader",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1052,
                            "src": "1729:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1216,
                              "name": "swap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1174,
                              "src": "1745:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                                "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                              }
                            },
                            "id": 1217,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1750:10:3",
                            "memberName": "erc20Value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1054,
                            "src": "1745:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1210,
                            "name": "erc20Contract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1188,
                            "src": "1684:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$1381",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1698:12:3",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1371,
                          "src": "1684:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1684:77:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1676:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:86:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1220,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:86:3"
                },
                {
                  "assignments": [
                    1222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1222,
                      "mutability": "mutable",
                      "name": "erc20TraderPayable",
                      "nameLocation": "1855:18:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "1839:34:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1839:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1228,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1225,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "1884:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1226,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1889:11:3",
                        "memberName": "erc20Trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1056,
                        "src": "1884:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1876:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1223,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1876:8:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1839:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1232,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1174,
                          "src": "1935:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1940:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1050,
                        "src": "1935:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1229,
                        "name": "erc20TraderPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "1907:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1926:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1907:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1907:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:39:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1237,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "1969:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1236,
                      "name": "Close",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "1963:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1963:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "EmitStatement",
                  "src": "1958:19:3"
                }
              ]
            },
            "functionSelector": "39c79e0c",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1169,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1166,
                    "src": "1334:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1170,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1168,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "1320:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1118,
                  "src": "1320:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1320:22:3"
              }
            ],
            "name": "close",
            "nameLocation": "1290:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1166,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "1304:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "1296:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1296:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1295:17:3"
            },
            "returnParameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:0:3"
            },
            "scope": 1315,
            "src": "1281:701:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1282,
              "nodeType": "Block",
              "src": "2049:318:3",
              "statements": [
                {
                  "assignments": [
                    1251
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1251,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "2091:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "2079:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                        "typeString": "struct AtomicSwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 1250,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1249,
                          "name": "Swap",
                          "nameLocations": [
                            "2079:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1059,
                          "src": "2079:4:3"
                        },
                        "referencedDeclaration": 1059,
                        "src": "2079:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1059_storage_ptr",
                          "typeString": "struct AtomicSwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1255,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1252,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "2098:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$1059_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapEtherToERC20.Swap storage ref)"
                      }
                    },
                    "id": 1254,
                    "indexExpression": {
                      "id": 1253,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1243,
                      "src": "2104:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2098:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$1059_storage",
                      "typeString": "struct AtomicSwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2079:33:3"
                },
                {
                  "expression": {
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1256,
                        "name": "swapStates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1074,
                        "src": "2118:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_enum$_States_$1064_$",
                          "typeString": "mapping(bytes32 => enum AtomicSwapEtherToERC20.States)"
                        }
                      },
                      "id": 1258,
                      "indexExpression": {
                        "id": 1257,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "2129:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2118:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$1064",
                        "typeString": "enum AtomicSwapEtherToERC20.States"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1259,
                        "name": "States",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1064,
                        "src": "2140:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_States_$1064_$",
                          "typeString": "type(enum AtomicSwapEtherToERC20.States)"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2147:7:3",
                      "memberName": "EXPIRED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1063,
                      "src": "2140:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_States_$1064",
                        "typeString": "enum AtomicSwapEtherToERC20.States"
                      }
                    },
                    "src": "2118:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_States_$1064",
                      "typeString": "enum AtomicSwapEtherToERC20.States"
                    }
                  },
                  "id": 1262,
                  "nodeType": "ExpressionStatement",
                  "src": "2118:36:3"
                },
                {
                  "assignments": [
                    1264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "ethTraderPayable",
                      "nameLocation": "2251:16:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1282,
                      "src": "2235:32:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2235:15:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1270,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1267,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "2278:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2283:9:3",
                        "memberName": "ethTrader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1052,
                        "src": "2278:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2270:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2270:8:3",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2270:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2235:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1274,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1251,
                          "src": "2325:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2330:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1050,
                        "src": "2325:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1271,
                        "name": "ethTraderPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "2299:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2316:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2299:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "2299:37:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1279,
                        "name": "_swapID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1243,
                        "src": "2354:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1278,
                      "name": "Expire",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1084,
                      "src": "2347:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "EmitStatement",
                  "src": "2342:20:3"
                }
              ]
            },
            "functionSelector": "c6441798",
            "id": 1283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1246,
                    "name": "_swapID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1243,
                    "src": "2040:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1247,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1245,
                  "name": "onlyOpenSwaps",
                  "nameLocations": [
                    "2026:13:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1118,
                  "src": "2026:13:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2026:22:3"
              }
            ],
            "name": "expire",
            "nameLocation": "1995:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1243,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2010:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1283,
                  "src": "2002:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1242,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2001:17:3"
            },
            "returnParameters": {
              "id": 1248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:0:3"
            },
            "scope": 1315,
            "src": "1986:381:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1313,
              "nodeType": "Block",
              "src": "2510:132:3",
              "statements": [
                {
                  "assignments": [
                    1298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "swap",
                      "nameLocation": "2528:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1313,
                      "src": "2516:16:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                        "typeString": "struct AtomicSwapEtherToERC20.Swap"
                      },
                      "typeName": {
                        "id": 1297,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1296,
                          "name": "Swap",
                          "nameLocations": [
                            "2516:4:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1059,
                          "src": "2516:4:3"
                        },
                        "referencedDeclaration": 1059,
                        "src": "2516:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Swap_$1059_storage_ptr",
                          "typeString": "struct AtomicSwapEtherToERC20.Swap"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1302,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1299,
                      "name": "swaps",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1069,
                      "src": "2535:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Swap_$1059_storage_$",
                        "typeString": "mapping(bytes32 => struct AtomicSwapEtherToERC20.Swap storage ref)"
                      }
                    },
                    "id": 1301,
                    "indexExpression": {
                      "id": 1300,
                      "name": "_swapID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1285,
                      "src": "2541:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2535:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Swap_$1059_storage",
                      "typeString": "struct AtomicSwapEtherToERC20.Swap storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2516:33:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 1303,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "2564:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2569:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1050,
                        "src": "2564:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1305,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "2576:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1306,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2581:10:3",
                        "memberName": "erc20Value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1054,
                        "src": "2576:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1307,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "2593:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1308,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2598:11:3",
                        "memberName": "erc20Trader",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1056,
                        "src": "2593:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1309,
                          "name": "swap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1298,
                          "src": "2611:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Swap_$1059_memory_ptr",
                            "typeString": "struct AtomicSwapEtherToERC20.Swap memory"
                          }
                        },
                        "id": 1310,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2616:20:3",
                        "memberName": "erc20ContractAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1058,
                        "src": "2611:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1311,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2563:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$_t_address_$",
                      "typeString": "tuple(uint256,uint256,address,address)"
                    }
                  },
                  "functionReturnParameters": 1295,
                  "id": 1312,
                  "nodeType": "Return",
                  "src": "2555:82:3"
                }
              ]
            },
            "functionSelector": "399e0792",
            "id": 1314,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "2380:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1285,
                  "mutability": "mutable",
                  "name": "_swapID",
                  "nameLocation": "2394:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "2386:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2385:17:3"
            },
            "returnParameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1288,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2432:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "2424:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2424:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1290,
                  "mutability": "mutable",
                  "name": "erc20Value",
                  "nameLocation": "2447:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "2439:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2439:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1292,
                  "mutability": "mutable",
                  "name": "erc20Trader",
                  "nameLocation": "2467:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "2459:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2459:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1294,
                  "mutability": "mutable",
                  "name": "erc20ContractAddress",
                  "nameLocation": "2488:20:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1314,
                  "src": "2480:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2423:86:3"
            },
            "scope": 1315,
            "src": "2371:271:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1316,
        "src": "96:2548:3",
        "usedErrors": []
      }
    ],
    "src": "28:2617:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x5dE6Ae42a6fb0C801d5e269b2Dcd8cD08AA081f8",
      "transactionHash": "0xcef4fbf0111d610e44d66e2d506da56ec336790ab3ea8fb25328a0ab196eea20"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-03-28T10:20:21.171Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}